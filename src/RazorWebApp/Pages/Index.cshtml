@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<h1>Welcome</h1>
<p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>

<form method="POST" enctype="multipart/form-data">
    <label>Choose CSV File</label>
    <input type="file" accept=".csv" asp-for="UserFile" />

    <button type="submit">Upload</button>
</form>

<blockquote>
    @Model.Announcement
</blockquote>
<p><small>Content Root Path: <code>@Model.ContentRootPath</code></small></p>
<p><small>Web Root Path: <code>@Model.WebRootPath</code></small></p>

<form method="post">
    <button type="submit" asp-page-handler="Show">Show Folders</button>
</form>

<ul>
    @foreach(var folder in Model.Folders)
    {
        var parts = folder.Split("\\");
        <li>@parts.Last()</li>
    }
</ul>

<hr />

<form method="post">
    <button type="submit" asp-page-handler="Enable">Enable</button>
    <label></label><input type="checkbox" asp-for="DisableButton" /> Disable Button</label>
</form>
<form method="post">
    <input type="hidden" asp-for="ButtonDemo" value="true" />
    <button type="submit" @(Model.DisableButton ? "disabled" : "")>Disable by ternary</button>

    @if(Model.DisableButton)
    {
    <button type="submit" asp-page-handler="Toggle" disabled>Disable  by @@if(){}</button>

    }
    else
    {
    <button type="submit" asp-page-handler="Toggle">Disable  by @@if(){}</button>
        
    }
</form>

<hr />

<h2>Good vs Bad Design</h2>

<p>A basic principle of good design is to encourage "loose coupling" between the various "parts" of you application.</p>

<figure>
    <img src="/images/GoodDesign.png" alt="Good Design">
    <figcaption>Good Design - Loose Coupling</figcaption>
</figure>

<figure>
    <img src="/images/BadDesign.png" alt="Bad Design">
    <figcaption>Bad Design - Tight Coupling - Rigid Depedencies</figcaption>
</figure>
